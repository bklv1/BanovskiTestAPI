// <auto-generated />
using System;
using BanovskiTestAPI.SQLFolder;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BanovskiTestAPI.Migrations
{
    [DbContext(typeof(PlayersContext))]
    [Migration("20220217074457_New")]
    partial class New
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8");

            modelBuilder.Entity("BanovskiTestAPI.SQLFolder.PlayerInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("JerseyNumber")
                        .HasColumnType("int");

                    b.Property<string>("PlayerClub")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlayerFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlayerLastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("playerInfo");
                });

            modelBuilder.Entity("BanovskiTestAPI.SQLFolder.TeamInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.Property<int?>("PlayerInfoId")
                        .HasColumnType("int");

                    b.Property<string>("TeamName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PlayerInfoId");

                    b.ToTable("teamInfo");
                });

            modelBuilder.Entity("BanovskiTestAPI.SQLFolder.TeamInfo", b =>
                {
                    b.HasOne("BanovskiTestAPI.SQLFolder.PlayerInfo", null)
                        .WithMany("AllClubs")
                        .HasForeignKey("PlayerInfoId");
                });

            modelBuilder.Entity("BanovskiTestAPI.SQLFolder.PlayerInfo", b =>
                {
                    b.Navigation("AllClubs");
                });
#pragma warning restore 612, 618
        }
    }
}
